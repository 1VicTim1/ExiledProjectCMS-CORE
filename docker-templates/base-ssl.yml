# Base Docker Compose Template with SSL Support
# Contains core application services with inter-service SSL encryption
version: '3.8'

networks:
  exiled-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16

services:
  # Main C# API with SSL support
  cms-api:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: exiled-cms-api
    environment:
      - ASPNETCORE_ENVIRONMENT=${ENVIRONMENT:-Production}
      - ASPNETCORE_URLS=http://+:8080;https://+:8443;https://+:8444
      - ASPNETCORE_HTTPS_PORT=8443
      - ASPNETCORE_Kestrel__Certificates__Default__Path=/app/ssl/cms-api.crt
      - ASPNETCORE_Kestrel__Certificates__Default__KeyPath=/app/ssl/cms-api.key
      - DatabaseProvider=${DATABASE_PROVIDER}
      - CacheProvider=${CACHE_PROVIDER}
      - ConnectionStrings__DefaultConnection=${DB_CONNECTION_STRING_SSL}
      - ConnectionStrings__Redis=${REDIS_CONNECTION_STRING_SSL}
      - Admin__DefaultUsername=${ADMIN_USERNAME:-admin}
      - Plugins__Directory=/app/Plugins
      - Plugins__EnableHotReload=${ENABLE_PLUGIN_HOT_RELOAD:-true}
      - JWT__Secret=${JWT_SECRET}
      - Encryption__Key=${ENCRYPTION_KEY}
      - SSL__RequireHttps=${SSL_REQUIRE_HTTPS:-false}
      - SSL__RequireHttpsForInternal=true
      - SSL__ClientCertificateValidation=true
      - SSL__TrustedCA=/app/ssl/ca.crt
    ports:
      - "${API_PORT:-5006}:8080"           # HTTP (health checks only)
      - "${API_SSL_PORT:-5443}:8443"       # Public HTTPS
      - "${API_INTERNAL_PORT:-5444}:8444"  # Internal HTTPS (mutual TLS)
    volumes:
      - ./Plugins:/app/Plugins
      - ./Uploads:/app/Uploads
      - ./Logs:/app/Logs
      - ./ssl-certificates/services/cms-api:/app/ssl:ro
      - ./ssl-certificates/ca:/app/ssl-ca:ro
      - ./ssl-certificates/services/clients:/app/ssl/clients:ro
      - ./ssl-infrastructure/service-configs/cms-api-ssl.json:/app/appsettings.ssl.json:ro
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8080/health" ]
      interval: 30s
      timeout: 10s
      retries: 5
    networks:
      exiled-network:
        aliases:
          - cms-api.exiled.local
    deploy:
      replicas: ${API_REPLICAS:-1}
      resources:
        limits:
          memory: 512M
        reservations:
          memory: 256M
    restart: unless-stopped
    depends_on:
      - ssl-init

  # SSL initialization service
  ssl-init:
    image: alpine:latest
    container_name: exiled-ssl-init
    command: |
      sh -c '
        echo "Initializing SSL certificates..."
        # Set correct permissions
        find /ssl-certificates -name "*.key" -exec chmod 600 {} \;
        find /ssl-certificates -name "*.crt" -exec chmod 644 {} \;

        # Verify certificates exist
        for service in cms-api go-api skins-service email-service nginx redis; do
          if [ ! -f "/ssl-certificates/services/$$service/$$service.crt" ]; then
            echo "WARNING: Certificate missing for $$service"
          else
            echo "âœ“ Certificate found for $$service"
          fi
        done

        echo "SSL initialization completed"
      '
    volumes:
      - ./ssl-certificates:/ssl-certificates
    networks:
      - exiled-network
    restart: "no"