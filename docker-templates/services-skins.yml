# Skins & Capes Service Template
version: '3.8'

services:
  # Skins & Capes Go Service
  skins-capes:
    build:
      context: ./GoServices/SkinsCapesService
      dockerfile: Dockerfile
    container_name: exiled-skins-capes
    environment:
      - SKINS_CAPES_PORT=8081
      - DATABASE_PROVIDER=${DATABASE_PROVIDER}
      - DB_CONNECTION_STRING=${DB_CONNECTION_STRING}
      - REDIS_HOST=${REDIS_HOST:-redis}
      - REDIS_PORT=${REDIS_PORT:-6379}
      - REDIS_PASSWORD=${REDIS_PASSWORD}
      - SKINS_STORAGE_PATH=${SKINS_STORAGE_PATH:-./storage/skins}
      - BASE_URL=${BASE_URL:-http://localhost:8081}
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
      - AWS_REGION=${AWS_REGION}
      - AWS_S3_BUCKET=${AWS_S3_BUCKET}
      - STORAGE_PROVIDER=${STORAGE_PROVIDER:-local}
    ports:
      - "${SKINS_CAPES_PORT:-8081}:8081"
    volumes:
      - ./storage/skins:/app/storage/skins
    healthcheck:
      test: [ "CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8081/health" ]
      interval: 30s
      timeout: 10s
      retries: 5
    networks:
      - exiled-network
    deploy:
      replicas: ${SKINS_CAPES_REPLICAS:-1}
      resources:
        limits:
          memory: 256M
        reservations:
          memory: 128M
    restart: unless-stopped