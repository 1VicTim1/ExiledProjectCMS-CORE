#!/bin/bash

# –ë—ã—Å—Ç—Ä–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ –≤—Å–µ—Ö —Å–µ—Ä–≤–∏—Å–æ–≤ ExiledProjectCMS
echo "üîç –ë—ã—Å—Ç—Ä–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ ExiledProjectCMS"
echo "============================================"

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m'

# –§—É–Ω–∫—Ü–∏—è –ø—Ä–æ–≤–µ—Ä–∫–∏ HTTP —ç–Ω–¥–ø–æ–∏–Ω—Ç–∞
check_endpoint() {
    local name="$1"
    local url="$2"
    local timeout=${3:-5}

    echo -n "–ü—Ä–æ–≤–µ—Ä—è—é $name... "

    if curl -s --max-time $timeout --connect-timeout $timeout "$url" >/dev/null 2>&1; then
        echo -e "${GREEN}‚úÖ –†–ê–ë–û–¢–ê–ï–¢${NC}"
        return 0
    else
        echo -e "${RED}‚ùå –ù–ï –û–¢–í–ï–ß–ê–ï–¢${NC}"
        return 1
    fi
}

# –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ docker compose –∏ —Ñ–∞–π–ª–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
COMPOSE_CMD=""
if command -v docker-compose >/dev/null 2>&1; then
  COMPOSE_CMD="docker-compose"
elif docker compose version >/dev/null 2>&1; then
  COMPOSE_CMD="docker compose"
fi

COMPOSE_FILE="docker-compose.generated.yml"
if [ ! -f "$COMPOSE_FILE" ]; then
  COMPOSE_FILE="docker-compose.yml"
fi

# –ü—Ä–æ–≤–µ—Ä–∫–∞ Docker —Å—Ç–∞—Ç—É—Å–∞
echo
echo -e "${BLUE}üê≥ Docker –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã:${NC}"
echo "====================="

if command -v docker >/dev/null 2>&1; then
    if docker info >/dev/null 2>&1; then
        echo -e "${GREEN}‚úÖ Docker —Ä–∞–±–æ—Ç–∞–µ—Ç${NC}"
        echo
        echo "–°—Ç–∞—Ç—É—Å –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤ (Exiled):"
        docker ps --format "table {{.Names}}\t{{.Status}}\t{{.Ports}}" | grep -E "(exiled|cms|go-api|skins|email|nginx|prometheus|grafana)" || echo "–ù–µ—Ç –∑–∞–ø—É—â–µ–Ω–Ω—ã—Ö ExiledCMS –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤"

        if [ -n "$COMPOSE_CMD" ] && [ -f "$COMPOSE_FILE" ]; then
          echo
          echo -e "${BLUE}üß© Docker Compose –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è:${NC}"
          echo "–§–∞–π–ª: $COMPOSE_FILE"
          echo "–û–ø—Ä–µ–¥–µ–ª—ë–Ω–Ω—ã–µ —Å–µ—Ä–≤–∏—Å—ã:"
          $COMPOSE_CMD -f "$COMPOSE_FILE" config --services 2>/dev/null | sort | sed 's/^/  ‚Ä¢ /' || echo "(–Ω–µ —É–¥–∞–ª–æ—Å—å —Ä–∞—Å–ø–∞—Ä—Å–∏—Ç—å compose)"

          echo
          echo "–°—Ä–∞–≤–Ω–µ–Ω–∏–µ –æ–ø—Ä–µ–¥–µ–ª—ë–Ω–Ω—ã—Ö vs –∑–∞–ø—É—â–µ–Ω–Ω—ã—Ö:"
          defined=$($COMPOSE_CMD -f "$COMPOSE_FILE" config --services 2>/dev/null | sort)
          running=$(docker ps --format '{{.Names}}' | sort)
          for svc in $defined; do
            # –æ–∂–∏–¥–∞–µ–º, —á—Ç–æ –∏–º–µ–Ω–∞ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤ –Ω–∞—á–∏–Ω–∞—é—Ç—Å—è —Å exiled- –∏–ª–∏ —Å–æ–≤–ø–∞–¥–∞—é—Ç —Å –∏–º–µ–Ω–µ–º —Å–µ—Ä–≤–∏—Å–∞
            if echo "$running" | grep -E "(^|\n)(exiled-$svc|$svc)(\n|$)" >/dev/null; then
              echo -e "${GREEN}  ‚úì $svc –∑–∞–ø—É—â–µ–Ω${NC}"
            else
              echo -e "${RED}  ‚úó $svc –Ω–µ –∑–∞–ø—É—â–µ–Ω${NC}"
            fi
          done

          # –°–ø–µ—Ü–∏–∞–ª—å–Ω–æ–µ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ, –µ—Å–ª–∏ –Ω–∞–π–¥–µ–Ω—ã —Ç–æ–ª—å–∫–æ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–æ–≤—ã–µ —Å–µ—Ä–≤–∏—Å—ã
          if echo "$defined" | grep -vE '^(prometheus|grafana)$' >/dev/null; then
            : # –µ—Å—Ç—å –∏ –¥—Ä—É–≥–∏–µ —Å–µ—Ä–≤–∏—Å—ã
          else
            echo -e "${YELLOW}‚ö† –û–±–Ω–∞—Ä—É–∂–µ–Ω—ã —Ç–æ–ª—å–∫–æ —Å–µ—Ä–≤–∏—Å—ã –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ (Prometheus/Grafana).${NC}"
            echo -e "${YELLOW}  –ï—Å–ª–∏ –≤—ã –æ–∂–∏–¥–∞–ª–∏ –∑–∞–ø—É—Å–∫ –æ—Å–Ω–æ–≤–Ω–æ–≥–æ API –∏ –¥—Ä—É–≥–∏—Ö —Å–µ—Ä–≤–∏—Å–æ–≤ ‚Äî –ø–µ—Ä–µ–≥–µ–Ω–µ—Ä–∏—Ä—É–π—Ç–µ compose —á–µ—Ä–µ–∑ —É—Å—Ç–∞–Ω–æ–≤—â–∏–∫.${NC}"
          fi
        fi
    else
        echo -e "${RED}‚ùå Docker daemon –Ω–µ –∑–∞–ø—É—â–µ–Ω${NC}"
    fi
else
    echo -e "${RED}‚ùå Docker –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω${NC}"
fi

echo
echo -e "${BLUE}üåê HTTP –≠–Ω–¥–ø–æ–∏–Ω—Ç—ã:${NC}"
echo "=================="

# –û—Å–Ω–æ–≤–Ω—ã–µ —Å–µ—Ä–≤–∏—Å—ã
check_endpoint "CMS API Health" "http://localhost:5006/health"
check_endpoint "CMS API Swagger" "http://localhost:5006/swagger"
check_endpoint "Go API Health" "http://localhost:8080/health"
check_endpoint "Go API Metrics" "http://localhost:8080/metrics"
check_endpoint "Skins Service" "http://localhost:8081/health"
check_endpoint "Email Service" "http://localhost:8082/health"
check_endpoint "Nginx (Frontend)" "http://localhost:80"
check_endpoint "Redis" "http://localhost:6379" 1

echo
echo -e "${BLUE}üìä –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö:${NC}"
echo "==============="

# –ü—Ä–æ–≤–µ—Ä–∫–∞ MySQL
echo -n "MySQL... "
if nc -z localhost 3306 2>/dev/null; then
    echo -e "${GREEN}‚úÖ –ü–æ—Ä—Ç 3306 –æ—Ç–∫—Ä—ã—Ç${NC}"
else
    echo -e "${RED}‚ùå –ü–æ—Ä—Ç 3306 –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω${NC}"
fi

echo
echo -e "${BLUE}üìà –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥:${NC}"
echo "==============="

check_endpoint "Prometheus" "http://localhost:9090"
check_endpoint "Grafana" "http://localhost:3001"

echo
echo -e "${YELLOW}üí° –ü–æ–¥—Å–∫–∞–∑–∫–∏:${NC}"
echo "============="
echo "‚Ä¢ –ï—Å–ª–∏ —Å–µ—Ä–≤–∏—Å—ã –Ω–µ –æ—Ç–≤–µ—á–∞—é—Ç, –ø—Ä–æ–≤–µ—Ä—å—Ç–µ: $([ -n "$COMPOSE_CMD" ] && echo "$COMPOSE_CMD ps" || echo "docker ps")"
echo "‚Ä¢ –î–ª—è –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞: $([ -n "$COMPOSE_CMD" ] && echo "$COMPOSE_CMD restart [service]" || echo "docker restart [container]")"
echo "‚Ä¢ –õ–æ–≥–∏ —Å–µ—Ä–≤–∏—Å–∞: $([ -n "$COMPOSE_CMD" ] && echo "$COMPOSE_CMD logs [service]" || echo "docker logs [container]")"
echo "‚Ä¢ –ü–æ–ª–Ω—ã–π –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫: $([ -n "$COMPOSE_CMD" ] && echo "$COMPOSE_CMD -f $COMPOSE_FILE down && $COMPOSE_CMD -f $COMPOSE_FILE up -d" || echo "docker system prune")"
echo
echo "üéØ –û—Å–Ω–æ–≤–Ω—ã–µ URL:"
echo "‚Ä¢ API: http://localhost:5006"
echo "‚Ä¢ Go API: http://localhost:8080"
echo "‚Ä¢ Frontend/Nginx: http://localhost:80"
echo "‚Ä¢ Grafana: http://localhost:3001"