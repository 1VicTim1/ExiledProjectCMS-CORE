version: "3.8"

services:
  mainapi:
    build:
      context: ./src/MainApi
      dockerfile: Dockerfile
    container_name: mainapi
    env_file:
      - ./.env
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://0.0.0.0:8080
    ports:
      - "${API_PORT:-5190}:8080"
    depends_on:
      - ${DB_PROVIDER:-mysql}
    networks:
      - backend

  mysql:
    image: mysql:8.0
    profiles: [ "mysql" ]
    container_name: mysql
    env_file:
      - ./.env
    environment:
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD:-rootpassword}
      - MYSQL_DATABASE=${DB_NAME:-exiledcms}
    ports:
      - "${MYSQL_PORT:-3306}:3306"
    volumes:
      - mysql_data:/var/lib/mysql
      - ./db/mysql/init:/docker-entrypoint-initdb.d:ro
    networks:
      - backend

  postgres:
    image: postgres:16
    profiles: [ "postgresql", "postgres" ]
    container_name: postgres
    environment:
      - POSTGRES_DB=${DB_NAME:-exiledcms}
      - POSTGRES_USER=${DB_USER:-postgres}
      - POSTGRES_PASSWORD=${DB_PASSWORD:-postgres}
    ports:
      - "${POSTGRES_PORT:-5432}:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - backend

  prometheus:
    image: prom/prometheus:v2.54.1
    container_name: prometheus
    entrypoint: [ "/bin/sh", "/etc/prometheus/entrypoint.sh" ]
    volumes:
      - ./monitoring/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - ./monitoring/prometheus/entrypoint.sh:/etc/prometheus/entrypoint.sh:ro
      - prometheus_data:/prometheus
    ports:
      - "${PROMETHEUS_PORT:-9090}:9090"
    networks:
      - backend
    depends_on:
      - mainapi

  grafana:
    image: grafana/grafana:11.1.0
    container_name: grafana
    environment:
      - GF_SECURITY_ADMIN_USER=${GRAFANA_ADMIN_USER:-admin}
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_ADMIN_PASSWORD:-admin}
      - GF_INSTALL_PLUGINS=${GRAFANA_INSTALL_PLUGINS:-}
    volumes:
      - grafana_data:/var/lib/grafana
      - ./monitoring/grafana/provisioning:/etc/grafana/provisioning:ro
    ports:
      - "${GRAFANA_PORT:-3000}:3000"
    networks:
      - backend
    depends_on:
      - prometheus

  phpmyadmin:
    image: phpmyadmin:5
    profiles: [ "mysql", "pma" ]
    container_name: phpmyadmin
    environment:
      - PMA_HOST=mysql
      - PMA_PORT=3306
      - UPLOAD_LIMIT=256M
    ports:
      - "${PHPMYADMIN_PORT:-8081}:80"
    depends_on:
      - mysql
    networks:
      - backend

  login-frontend:
    build:
      context: ./login-frontend
      dockerfile: Dockerfile
    container_name: login-frontend
    env_file:
      - ./.env
    environment:
      - VITE_API_BASE_URL=http://mainapi:8080
    ports:
      - "8080:80"
    depends_on:
      - mainapi
    networks:
      - backend

networks:
  backend:

volumes:
  mysql_data:
  postgres_data:
  prometheus_data:
  grafana_data:
